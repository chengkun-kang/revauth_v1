// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

/*
Package auth is a generated protocol buffer package.

It is generated from these files:
	auth.proto

It has these top-level messages:
	AuthRequest
	AuthReply
	QueryRequest
	QueryReply
*/
package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AuthRequest struct {
	Account  string `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *AuthRequest) Reset()                    { *m = AuthRequest{} }
func (m *AuthRequest) String() string            { return proto.CompactTextString(m) }
func (*AuthRequest) ProtoMessage()               {}
func (*AuthRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AuthRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *AuthRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthReply struct {
	IsAuthenticated bool   `protobuf:"varint,1,opt,name=isAuthenticated" json:"isAuthenticated,omitempty"`
	Error           string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Account         string `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	Name            string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	First           string `protobuf:"bytes,5,opt,name=first" json:"first,omitempty"`
	Last            string `protobuf:"bytes,6,opt,name=last" json:"last,omitempty"`
	Email           string `protobuf:"bytes,7,opt,name=email" json:"email,omitempty"`
	Depart          string `protobuf:"bytes,8,opt,name=depart" json:"depart,omitempty"`
	Avatar          string `protobuf:"bytes,9,opt,name=avatar" json:"avatar,omitempty"`
}

func (m *AuthReply) Reset()                    { *m = AuthReply{} }
func (m *AuthReply) String() string            { return proto.CompactTextString(m) }
func (*AuthReply) ProtoMessage()               {}
func (*AuthReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AuthReply) GetIsAuthenticated() bool {
	if m != nil {
		return m.IsAuthenticated
	}
	return false
}

func (m *AuthReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *AuthReply) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *AuthReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AuthReply) GetFirst() string {
	if m != nil {
		return m.First
	}
	return ""
}

func (m *AuthReply) GetLast() string {
	if m != nil {
		return m.Last
	}
	return ""
}

func (m *AuthReply) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AuthReply) GetDepart() string {
	if m != nil {
		return m.Depart
	}
	return ""
}

func (m *AuthReply) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

type QueryRequest struct {
	Account string `protobuf:"bytes,1,opt,name=account" json:"account,omitempty"`
	Email   string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
}

func (m *QueryRequest) Reset()                    { *m = QueryRequest{} }
func (m *QueryRequest) String() string            { return proto.CompactTextString(m) }
func (*QueryRequest) ProtoMessage()               {}
func (*QueryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *QueryRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *QueryRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type QueryReply struct {
	NotExist bool   `protobuf:"varint,1,opt,name=notExist" json:"notExist,omitempty"`
	Error    string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
	Account  string `protobuf:"bytes,3,opt,name=account" json:"account,omitempty"`
	Name     string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	First    string `protobuf:"bytes,5,opt,name=first" json:"first,omitempty"`
	Last     string `protobuf:"bytes,6,opt,name=last" json:"last,omitempty"`
	Email    string `protobuf:"bytes,7,opt,name=email" json:"email,omitempty"`
	Depart   string `protobuf:"bytes,8,opt,name=depart" json:"depart,omitempty"`
	Avatar   string `protobuf:"bytes,9,opt,name=avatar" json:"avatar,omitempty"`
}

func (m *QueryReply) Reset()                    { *m = QueryReply{} }
func (m *QueryReply) String() string            { return proto.CompactTextString(m) }
func (*QueryReply) ProtoMessage()               {}
func (*QueryReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *QueryReply) GetNotExist() bool {
	if m != nil {
		return m.NotExist
	}
	return false
}

func (m *QueryReply) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *QueryReply) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *QueryReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *QueryReply) GetFirst() string {
	if m != nil {
		return m.First
	}
	return ""
}

func (m *QueryReply) GetLast() string {
	if m != nil {
		return m.Last
	}
	return ""
}

func (m *QueryReply) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *QueryReply) GetDepart() string {
	if m != nil {
		return m.Depart
	}
	return ""
}

func (m *QueryReply) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func init() {
	proto.RegisterType((*AuthRequest)(nil), "AuthRequest")
	proto.RegisterType((*AuthReply)(nil), "AuthReply")
	proto.RegisterType((*QueryRequest)(nil), "QueryRequest")
	proto.RegisterType((*QueryReply)(nil), "QueryReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Auth service

type AuthClient interface {
	Authenticate(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthReply, error)
	Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryReply, error)
}

type authClient struct {
	cc *grpc.ClientConn
}

func NewAuthClient(cc *grpc.ClientConn) AuthClient {
	return &authClient{cc}
}

func (c *authClient) Authenticate(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthReply, error) {
	out := new(AuthReply)
	err := grpc.Invoke(ctx, "/auth/authenticate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authClient) Query(ctx context.Context, in *QueryRequest, opts ...grpc.CallOption) (*QueryReply, error) {
	out := new(QueryReply)
	err := grpc.Invoke(ctx, "/auth/query", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Auth service

type AuthServer interface {
	Authenticate(context.Context, *AuthRequest) (*AuthReply, error)
	Query(context.Context, *QueryRequest) (*QueryReply, error)
}

func RegisterAuthServer(s *grpc.Server, srv AuthServer) {
	s.RegisterService(&_Auth_serviceDesc, srv)
}

func _Auth_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Authenticate(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Auth_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServer).Query(ctx, req.(*QueryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Auth_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth",
	HandlerType: (*AuthServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "authenticate",
			Handler:    _Auth_Authenticate_Handler,
		},
		{
			MethodName: "query",
			Handler:    _Auth_Query_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x92, 0xc1, 0x4a, 0xc4, 0x30,
	0x18, 0x84, 0xb7, 0x6b, 0xdb, 0x6d, 0xff, 0xad, 0x08, 0x41, 0x24, 0xf4, 0x24, 0x01, 0x61, 0xf1,
	0xd0, 0x83, 0xde, 0x05, 0x11, 0x1f, 0xc0, 0xde, 0x3c, 0xfe, 0xb6, 0x91, 0x2d, 0x74, 0x9b, 0x6e,
	0xf2, 0x57, 0xdd, 0x77, 0xf5, 0x05, 0x7c, 0x0b, 0x49, 0x52, 0x6b, 0xf5, 0xe2, 0xd9, 0x5b, 0xbe,
	0x69, 0x98, 0x09, 0xd3, 0x01, 0xc0, 0x81, 0xb6, 0x45, 0xaf, 0x15, 0x29, 0x71, 0x07, 0xeb, 0xdb,
	0x81, 0xb6, 0xa5, 0xdc, 0x0f, 0xd2, 0x10, 0xe3, 0xb0, 0xc2, 0xaa, 0x52, 0x43, 0x47, 0x3c, 0x38,
	0x0f, 0x36, 0x69, 0xf9, 0x85, 0x2c, 0x87, 0xa4, 0x47, 0x63, 0x5e, 0x95, 0xae, 0xf9, 0xd2, 0x7d,
	0x9a, 0x58, 0x7c, 0x04, 0x90, 0x7a, 0x97, 0xbe, 0x3d, 0xb0, 0x0d, 0x9c, 0x34, 0xc6, 0xa2, 0xec,
	0xa8, 0xa9, 0x90, 0x64, 0xed, 0xbc, 0x92, 0xf2, 0xb7, 0xcc, 0x4e, 0x21, 0x92, 0x5a, 0x2b, 0x3d,
	0x1a, 0x7a, 0x98, 0xbf, 0xe1, 0xe8, 0xe7, 0x1b, 0x18, 0x84, 0x1d, 0xee, 0x24, 0x0f, 0x9d, 0xec,
	0xce, 0xd6, 0xe3, 0xb9, 0xd1, 0x86, 0x78, 0xe4, 0x3d, 0x1c, 0xd8, 0x9b, 0x2d, 0x1a, 0xe2, 0xb1,
	0xbf, 0x69, 0xcf, 0x2e, 0x6d, 0x87, 0x4d, 0xcb, 0x57, 0x63, 0x9a, 0x05, 0x76, 0x06, 0x71, 0x2d,
	0x7b, 0xd4, 0xc4, 0x13, 0x27, 0x8f, 0x64, 0x75, 0x7c, 0x41, 0x42, 0xcd, 0x53, 0xaf, 0x7b, 0x12,
	0x37, 0x90, 0x3d, 0x0c, 0x52, 0x1f, 0xfe, 0x6e, 0x6c, 0xca, 0x5b, 0xce, 0xf2, 0xc4, 0x7b, 0x00,
	0x30, 0x1a, 0xd8, 0xb2, 0x72, 0x48, 0x3a, 0x45, 0xf7, 0x6f, 0x8d, 0xa1, 0xb1, 0xa5, 0x89, 0xff,
	0x63, 0x3d, 0x57, 0x8f, 0x10, 0xda, 0x75, 0xb1, 0x4b, 0xc8, 0x70, 0xf6, 0xaf, 0x59, 0x56, 0xcc,
	0x66, 0x96, 0x43, 0x31, 0xcd, 0x45, 0x2c, 0xd8, 0x05, 0x44, 0x7b, 0xdb, 0x08, 0x3b, 0x2e, 0xe6,
	0xd5, 0xe6, 0xeb, 0xe2, 0xbb, 0x28, 0xb1, 0x78, 0x8a, 0xdd, 0x62, 0xaf, 0x3f, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x4b, 0x21, 0xa9, 0xe2, 0xbf, 0x02, 0x00, 0x00,
}
